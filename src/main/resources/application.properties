
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#
#spring.datasource.url = jdbc:postgresql://34.237.143.208:31399/online-voting-system-db
#spring.datasource.username = postgres
#spring.datasource.password = NTgSEe4uW7AymGWm

spring.datasource.url = jdbc:postgresql://${DBHOST}:${DBPORT}/${DATABASE}
spring.datasource.username = ${DBUSER}
spring.datasource.password = ${DBPASSWORD}
 #jdbc:postgresql://127.0.0.1:5432/dvdrental
## hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

 

# hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update
server.port = 8081



### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:postgresql://a520280e3179d42b4835b381dde28753-1339284433.us-east-2.elb.amazonaws.com:5432/OVS
#spring.datasource.username = postgres
#spring.datasource.password = password
# #jdbc:postgresql://127.0.0.1:5432/dvdrental
#
### hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# 
## hibernate ddl auto (create, create-drop, validate, update)
##spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = update
#server.port = 8081
#
#
#export DATABASE=OVS
#export DBUSER=postgres
#export DBPASSWORD=password
#export DBHOST=a520280e3179d42b4835b381dde28753-1339284433.us-east-2.elb.amazonaws.com